-- Crearea tabelei "TROTINETE"
CREATE TABLE LICAAMALIA_TROTINETE (
    ID_TROTINETA NUMBER(6) PRIMARY KEY,
    NUME_MODEL VARCHAR2(30),
    PRODUCATOR VARCHAR2(25),
    STARE VARCHAR2(20),
    BATERIE_RAMASA NUMBER(8),
    PRET_MINUT NUMBER(8,2),
    LOCATIE_CURENTA VARCHAR2(40)
);
describe LICAAMALIA_TROTINETE

-- Crearea tabelei "UTILIZATORI"
CREATE TABLE LICAAMALIA_UTILIZATORI (
    ID_UTILIZATOR NUMBER PRIMARY KEY,
    NUME VARCHAR2(30),
    PRENUME VARCHAR2(30),
    ADRESA VARCHAR2(50),
    EMAIL VARCHAR2(25),
    TELEFON VARCHAR2(15)
);
describe LICAAMALIA_UTILIZATORI

-- Crearea tabelei "INTRETINERE_TROTINETE"
CREATE TABLE LICAAMALIA_INTRETINERE_TROTINETE (
    ID_INTRETINERE NUMBER(6) PRIMARY KEY,
    ID_TROTINETA NUMBER(6),
    DATA_INTRETINERE DATE,
    TIP_INTRETINERE VARCHAR2(30),
    COST_INTRETINERE NUMBER(8,2),
    PIESE_INLOCUITE VARCHAR2(40),
    TEHNICIAN_RESPONSABIL VARCHAR2(40),
    FOREIGN KEY (ID_TROTINETA) REFERENCES LICAAMALIA_TROTINETE(ID_TROTINETA)
);
describe LICAAMALIA_INTRETINERE_TROTINETE

-- Crearea tabelei "RAPORT_TROTINETE"
CREATE TABLE LICAAMALIA_RAPORT_TROTINETE (
    ID_RAPORT NUMBER(6) PRIMARY KEY,
    ID_TROTINETA NUMBER(6),
    DATA_RAPORT DATE,
    KILOMETRI_PARCURSI NUMBER(8,2),
    STARE_BATERIE NUMBER(8,2),
    FOREIGN KEY (ID_TROTINETA) REFERENCES LICAAMALIA_TROTINETE(ID_TROTINETA)
);
describe LICAAMALIA_RAPORT_TROTINETE

-- Crearea tabelei "INCHIRIERI"
CREATE TABLE LICAAMALIA_INCHIRIERI (
    ID_INCHIRIERE NUMBER(6) PRIMARY KEY,
    ID_UTILIZATOR NUMBER(6),
    ID_TROTINETA NUMBER(6),
    DATA_INCHIRIERE TIMESTAMP(6) WITH LOCAL TIME ZONE,
    DURATA_INCHIRIERE NUMBER(6),
    COST_TOTAL NUMBER(8,2),
    FOREIGN KEY (ID_UTILIZATOR) REFERENCES LICAAMALIA_UTILIZATORI(ID_UTILIZATOR),
    FOREIGN KEY (ID_TROTINETA) REFERENCES LICAAMALIA_TROTINETE(ID_TROTINETA)
);
describe LICAAMALIA_INCHIRIERI

-- Crearea tabelei "ISTORIC_UTILIZARE"
CREATE TABLE LICAAMALIA_ISTORIC_UTILIZARE (
    ID_ISTORIC NUMBER(6) PRIMARY KEY,
    ID_UTILIZATOR NUMBER(6),
    ID_TROTINETA NUMBER(6),
    DATA_UTILIZARE DATE,
    DURATA_UTILIZARE NUMBER(6),
    DISTANTA_PARCURSA NUMBER(8,2),
    COST_UTILIZARE NUMBER(8,2),
    FOREIGN KEY (ID_UTILIZATOR) REFERENCES LICAAMALIA_UTILIZATORI(ID_UTILIZATOR),
    FOREIGN KEY (ID_TROTINETA) REFERENCES LICAAMALIA_TROTINETE(ID_TROTINETA)
);
describe LICAAMALIA_ISTORIC_UTILIZARE

-- +++
ALTER TABLE LICAAMALIA_UTILIZATORI
ADD VARSTA NUMBER(3);
describe LICAAMALIA_UTILIZATORI

--1.Adãugarea de noi înregistrãri  în tabela "TROTINETE"
INSERT INTO LICAAMALIA_TROTINETE (ID_TROTINETA, NUME_MODEL, PRODUCATOR, STARE, BATERIE_RAMASA, PRET_MINUT, LOCATIE_CURENTA ) VALUES
(1, 'E10', 'XIAOMI', 'BUNA', '70', 1.5, 'Piata Unirii');
INSERT INTO LICAAMALIA_TROTINETE (ID_TROTINETA, NUME_MODEL, PRODUCATOR, STARE, BATERIE_RAMASA, PRET_MINUT, LOCATIE_CURENTA ) VALUES
(2, 'E12', 'XIAOMI', 'BUNA', '75', 1.7, 'Parcul Carol');
INSERT INTO LICAAMALIA_TROTINETE (ID_TROTINETA, NUME_MODEL, PRODUCATOR, STARE, BATERIE_RAMASA, PRET_MINUT, LOCATIE_CURENTA ) VALUES
(3, 'ES4', 'SEGWAY', 'BUNA', '60', 1.6, 'Parcul Herastrau');
INSERT INTO LICAAMALIA_TROTINETE (ID_TROTINETA, NUME_MODEL, PRODUCATOR, STARE, BATERIE_RAMASA, PRET_MINUT, LOCATIE_CURENTA ) VALUES
(4, 'M365', 'XIAOMI', 'OK', '80', 1.4, 'Parcul Tineretului');
INSERT INTO LICAAMALIA_TROTINETE (ID_TROTINETA, NUME_MODEL, PRODUCATOR, STARE, BATERIE_RAMASA, PRET_MINUT, LOCATIE_CURENTA ) VALUES
(5, 'BOOSTED REV', 'BOOSTED', 'BUNA', '90', 2.0, 'Aleea Privighetorilor');
INSERT INTO LICAAMALIA_TROTINETE (ID_TROTINETA, NUME_MODEL, PRODUCATOR, STARE, BATERIE_RAMASA, PRET_MINUT, LOCATIE_CURENTA ) VALUES
(6, 'CITYBUG 2S', 'CITYBUG', 'OK', '65', 1.8, 'Parcul Izvor');
INSERT INTO LICAAMALIA_TROTINETE (ID_TROTINETA, NUME_MODEL, PRODUCATOR, STARE, BATERIE_RAMASA, PRET_MINUT, LOCATIE_CURENTA ) VALUES
(7, 'Ninebot MAX', 'SEGWAY', 'BUNA', '85', 1.9, 'Bulevardul Magheru');
INSERT INTO LICAAMALIA_TROTINETE (ID_TROTINETA, NUME_MODEL, PRODUCATOR, STARE, BATERIE_RAMASA, PRET_MINUT, LOCATIE_CURENTA ) VALUES
(8, 'Zero 9', 'ZERO', 'BUNA', '70', 1.5, 'Parcul Circului');
INSERT INTO LICAAMALIA_TROTINETE (ID_TROTINETA, NUME_MODEL, PRODUCATOR, STARE, BATERIE_RAMASA, PRET_MINUT, LOCATIE_CURENTA ) VALUES
(9, 'Hollyburn P5', 'HOLLYBURN', 'OK', '75', 1.6, 'Parcul Titan');
INSERT INTO LICAAMALIA_TROTINETE (ID_TROTINETA, NUME_MODEL, PRODUCATOR, STARE, BATERIE_RAMASA, PRET_MINUT, LOCATIE_CURENTA ) VALUES
(10, 'Air T15', 'AIRWHEEL', 'BUNA', '80', 1.7, 'Bulevardul Unirii');
INSERT INTO LICAAMALIA_TROTINETE (ID_TROTINETA, NUME_MODEL, PRODUCATOR, STARE, BATERIE_RAMASA, PRET_MINUT, LOCATIE_CURENTA ) VALUES
(11, 'GXL V2', 'GOTRAX', 'BUNA', '78', 1.6, 'Piata Victoriei');

SELECT* FROM LICAAMALIA_TROTINETE
ORDER BY ID_TROTINETA ASC;


--2. Adãugarea de noi înregistrãri în tabela "UTILIZATORI"
INSERT INTO LICAAMALIA_UTILIZATORI(ID_UTILIZATOR, NUME, PRENUME, ADRESA, EMAIL, TELEFON, VARSTA)  VALUES
(1, 'LICA', 'AMALIA', 'Str. Oltului 3', 'amalialica@gmail.com', '0771665319', 20);
INSERT INTO LICAAMALIA_UTILIZATORI(ID_UTILIZATOR, NUME, PRENUME, ADRESA, EMAIL, TELEFON, VARSTA) VALUES
(2, 'POPESCU', 'ION', 'Str. Muresului 7', 'ion.popescu@gmail.com', '0770123456', 25);
INSERT INTO LICAAMALIA_UTILIZATORI(ID_UTILIZATOR, NUME, PRENUME, ADRESA, EMAIL, TELEFON, VARSTA) VALUES
(3, 'IONESCU', 'MARIA', 'Str. Dorobantilor 15', 'maria.ionescu@gmail.com', '0770789123', 30);
INSERT INTO LICAAMALIA_UTILIZATORI(ID_UTILIZATOR, NUME, PRENUME, ADRESA, EMAIL, TELEFON, VARSTA) VALUES
(4, 'GEORGESCU', 'ANDREI', 'Str. Bucuresti 21', 'andrei.georgesc@gmail.com', '0770555678', 28);
INSERT INTO LICAAMALIA_UTILIZATORI(ID_UTILIZATOR, NUME, PRENUME, ADRESA, EMAIL, TELEFON, VARSTA) VALUES
(5, 'RADULESCU', 'ELENA', 'Str. Unirii 8', 'elena.radulescu@gmail.com', '0770998765', 22);
INSERT INTO LICAAMALIA_UTILIZATORI(ID_UTILIZATOR, NUME, PRENUME, ADRESA, EMAIL, TELEFON, VARSTA) VALUES
(6, 'POPA', 'MIHAI', 'Str. Timisului 12', 'mihai.popa@gmail.com', '0770888234', 26);
INSERT INTO LICAAMALIA_UTILIZATORI(ID_UTILIZATOR, NUME, PRENUME, ADRESA, EMAIL, TELEFON, VARSTA) VALUES
(7, 'STANCU', 'GABRIELA', 'Str. Clujului 5', 'gabriela.stancu@gmail.com', '0770333678', 32);
INSERT INTO LICAAMALIA_UTILIZATORI(ID_UTILIZATOR, NUME, PRENUME, ADRESA, EMAIL, TELEFON, VARSTA) VALUES
(8, 'CONSTANTIN', 'ALEXANDRU', 'Str. Iasi 19', 'alex.constantin@gmail.com', '0770111222', 29);
INSERT INTO LICAAMALIA_UTILIZATORI(ID_UTILIZATOR, NUME, PRENUME, ADRESA, EMAIL, TELEFON, VARSTA) VALUES
(9, 'DUMITRU', 'CRISTINA', 'Str. Vaslui 4', 'cris.dumitru@gmail.com', '0770456123', 23);
INSERT INTO LICAAMALIA_UTILIZATORI(ID_UTILIZATOR, NUME, PRENUME, ADRESA, EMAIL, TELEFON, VARSTA) VALUES
(10, 'BARBU', 'DANIEL', 'Str. Bihorului 11', 'daniel.barbu@gmail.com', '0770345876', 27);
INSERT INTO LICAAMALIA_UTILIZATORI(ID_UTILIZATOR, NUME, PRENUME, ADRESA, EMAIL, TELEFON, VARSTA) VALUES
(11, 'VASILESCU', 'ANA', 'Str. Sibiu 2', 'ana.vasilescu@gmail.com', '0770998765', 21);

SELECT* FROM LICAAMALIA_UTILIZATORI
ORDER BY ID_UTILIZATOR ASC;



--3.Adãugarea de noi înregistrãri în tabela "INTRETINERE_TROTINETE"
INSERT INTO LICAAMALIA_INTRETINERE_TROTINETE(ID_INTRETINERE, ID_TROTINETA, DATA_INTRETINERE, COST_INTRETINERE, PIESE_INLOCUITE, TEHNICIAN_RESPONSABIL) VALUES
(1, 3, TO_DATE('2023-01-01', 'YYYY-MM-DD'),  150.00, 'Baterie, Frâne', 'Ion Popescu');
INSERT INTO LICAAMALIA_INTRETINERE_TROTINETE(ID_INTRETINERE, ID_TROTINETA, DATA_INTRETINERE, COST_INTRETINERE, PIESE_INLOCUITE, TEHNICIAN_RESPONSABIL) VALUES
(2, 7, TO_DATE('2023-02-15', 'YYYY-MM-DD'),  80.00, 'Acumulator', 'Maria Ionescu');
INSERT INTO LICAAMALIA_INTRETINERE_TROTINETE(ID_INTRETINERE, ID_TROTINETA, DATA_INTRETINERE, COST_INTRETINERE, PIESE_INLOCUITE, TEHNICIAN_RESPONSABIL) VALUES
(3, 4, TO_DATE('2023-03-20', 'YYYY-MM-DD'), 50.00, 'Cablu electric', 'Andrei Georgescu');
INSERT INTO LICAAMALIA_INTRETINERE_TROTINETE(ID_INTRETINERE, ID_TROTINETA, DATA_INTRETINERE,  COST_INTRETINERE, PIESE_INLOCUITE, TEHNICIAN_RESPONSABIL) VALUES
(4, 9, TO_DATE('2023-04-10', 'YYYY-MM-DD'),  60.00, 'Ro?i', 'Elena Radulescu');
INSERT INTO LICAAMALIA_INTRETINERE_TROTINETE(ID_INTRETINERE, ID_TROTINETA, DATA_INTRETINERE,  COST_INTRETINERE, PIESE_INLOCUITE, TEHNICIAN_RESPONSABIL) VALUES
(5, 5, TO_DATE('2023-05-05', 'YYYY-MM-DD'),  45.00, 'Plãcu?e frânã', 'Mihai Popa');
INSERT INTO LICAAMALIA_INTRETINERE_TROTINETE(ID_INTRETINERE, ID_TROTINETA, DATA_INTRETINERE, COST_INTRETINERE, PIESE_INLOCUITE, TEHNICIAN_RESPONSABIL) VALUES
(6, 2, TO_DATE('2023-06-18', 'YYYY-MM-DD'), 120.00, 'Baterie, Sistem de direc?ie', 'Gabriela Stancu');
INSERT INTO LICAAMALIA_INTRETINERE_TROTINETE(ID_INTRETINERE, ID_TROTINETA, DATA_INTRETINERE,  COST_INTRETINERE, PIESE_INLOCUITE, TEHNICIAN_RESPONSABIL) VALUES
(7, 10, TO_DATE('2023-07-22', 'YYYY-MM-DD'),  30.00, 'Becuri', 'Alexandru Constantin');
INSERT INTO LICAAMALIA_INTRETINERE_TROTINETE(ID_INTRETINERE, ID_TROTINETA, DATA_INTRETINERE,  COST_INTRETINERE, PIESE_INLOCUITE, TEHNICIAN_RESPONSABIL) VALUES
(8, 6, TO_DATE('2023-08-12', 'YYYY-MM-DD'),  70.00, 'Plãcu?e frânã', 'Cristina Dumitru');
INSERT INTO LICAAMALIA_INTRETINERE_TROTINETE(ID_INTRETINERE, ID_TROTINETA, DATA_INTRETINERE,  COST_INTRETINERE, PIESE_INLOCUITE, TEHNICIAN_RESPONSABIL) VALUES
(9, 8, TO_DATE('2023-09-28', 'YYYY-MM-DD'),  40.00, 'Amortizoare', 'Daniel Barbu');
INSERT INTO LICAAMALIA_INTRETINERE_TROTINETE(ID_INTRETINERE, ID_TROTINETA, DATA_INTRETINERE, COST_INTRETINERE, PIESE_INLOCUITE, TEHNICIAN_RESPONSABIL) VALUES
(10, 1, TO_DATE('2023-10-15', 'YYYY-MM-DD'),  25.00, 'Lampã', 'Ana Vasilescu');

SELECT* FROM LICAAMALIA_INTRETINERE_TROTINETE
ORDER BY ID_INTRETINERE ASC;

--4.Adãugarea de noi înregistrãri în tabela "RAPORT_TROTINETE"
INSERT INTO LICAAMALIA_RAPORT_TROTINETE (ID_RAPORT, ID_TROTINETA, DATA_RAPORT, KILOMETRI_PARCURSI, STARE_BATERIE) VALUES
(1, 3, TO_DATE('2023-01-05', 'YYYY-MM-DD'), 10.3, 80.0);
INSERT INTO LICAAMALIA_RAPORT_TROTINETE (ID_RAPORT, ID_TROTINETA, DATA_RAPORT, KILOMETRI_PARCURSI, STARE_BATERIE) VALUES
(2, 7, TO_DATE('2023-02-10', 'YYYY-MM-DD'), 15.8, 75.5);
INSERT INTO LICAAMALIA_RAPORT_TROTINETE (ID_RAPORT, ID_TROTINETA, DATA_RAPORT, KILOMETRI_PARCURSI, STARE_BATERIE) VALUES
(3, 4, TO_DATE('2023-03-15', 'YYYY-MM-DD'), 20.1, 85.2);
INSERT INTO LICAAMALIA_RAPORT_TROTINETE (ID_RAPORT, ID_TROTINETA, DATA_RAPORT, KILOMETRI_PARCURSI, STARE_BATERIE) VALUES
(4, 9, TO_DATE('2023-04-20', 'YYYY-MM-DD'), 11, 70.0);
INSERT INTO LICAAMALIA_RAPORT_TROTINETE (ID_RAPORT, ID_TROTINETA, DATA_RAPORT, KILOMETRI_PARCURSI, STARE_BATERIE) VALUES
(5, 5, TO_DATE('2023-05-25', 'YYYY-MM-DD'), 5, 78.5);
INSERT INTO LICAAMALIA_RAPORT_TROTINETE (ID_RAPORT, ID_TROTINETA, DATA_RAPORT, KILOMETRI_PARCURSI, STARE_BATERIE) VALUES
(6, 2, TO_DATE('2023-06-30', 'YYYY-MM-DD'), 4.9, 90.0);
INSERT INTO LICAAMALIA_RAPORT_TROTINETE (ID_RAPORT, ID_TROTINETA, DATA_RAPORT, KILOMETRI_PARCURSI, STARE_BATERIE) VALUES
(7, 10, TO_DATE('2023-07-05', 'YYYY-MM-DD'), 8,  82.3);
INSERT INTO LICAAMALIA_RAPORT_TROTINETE (ID_RAPORT, ID_TROTINETA, DATA_RAPORT, KILOMETRI_PARCURSI, STARE_BATERIE) VALUES
(8, 6, TO_DATE('2023-08-10', 'YYYY-MM-DD'), 17.3, 76.8);
INSERT INTO LICAAMALIA_RAPORT_TROTINETE (ID_RAPORT, ID_TROTINETA, DATA_RAPORT, KILOMETRI_PARCURSI, STARE_BATERIE) VALUES
(9, 8, TO_DATE('2023-09-15', 'YYYY-MM-DD'), 2, 88.0);
INSERT INTO LICAAMALIA_RAPORT_TROTINETE (ID_RAPORT, ID_TROTINETA, DATA_RAPORT, KILOMETRI_PARCURSI, STARE_BATERIE) VALUES
(10, 1, TO_DATE('2023-10-20', 'YYYY-MM-DD'), 18,  79.5);

SELECT* FROM LICAAMALIA_RAPORT_TROTINETE
ORDER BY ID_RAPORT ASC;

--5.Adãugarea de noi înregistrãri în tabela "INCHIRIERI"
INSERT INTO LICAAMALIA_INCHIRIERI (ID_INCHIRIERE, ID_UTILIZATOR, ID_TROTINETA, DATA_INCHIRIERE, DURATA_INCHIRIERE, COST_TOTAL ) VALUES
(1, 3, 2, TO_TIMESTAMP('2023-01-05 10:30:00', 'YYYY-MM-DD HH24:MI:SS'), 2, 10.50);
INSERT INTO LICAAMALIA_INCHIRIERI (ID_INCHIRIERE, ID_UTILIZATOR, ID_TROTINETA, DATA_INCHIRIERE, DURATA_INCHIRIERE, COST_TOTAL ) VALUES
(2, 7, 6, TO_TIMESTAMP('2023-02-10 15:45:00', 'YYYY-MM-DD HH24:MI:SS'), 1, 7.20);
INSERT INTO LICAAMALIA_INCHIRIERI (ID_INCHIRIERE, ID_UTILIZATOR, ID_TROTINETA, DATA_INCHIRIERE, DURATA_INCHIRIERE, COST_TOTAL ) VALUES
(3, 4, 8, TO_TIMESTAMP('2023-03-15 12:00:00', 'YYYY-MM-DD HH24:MI:SS'), 3, 18.90);
INSERT INTO LICAAMALIA_INCHIRIERI (ID_INCHIRIERE, ID_UTILIZATOR, ID_TROTINETA, DATA_INCHIRIERE, DURATA_INCHIRIERE, COST_TOTAL ) VALUES
(4, 9, 1, TO_TIMESTAMP('2023-04-20 09:15:00', 'YYYY-MM-DD HH24:MI:SS'), 4, 26.40);
INSERT INTO LICAAMALIA_INCHIRIERI (ID_INCHIRIERE, ID_UTILIZATOR, ID_TROTINETA, DATA_INCHIRIERE, DURATA_INCHIRIERE, COST_TOTAL ) VALUES
(5, 5, 5, TO_TIMESTAMP('2023-05-25 17:30:00', 'YYYY-MM-DD HH24:MI:SS'), 1, 8.50);
INSERT INTO LICAAMALIA_INCHIRIERI (ID_INCHIRIERE, ID_UTILIZATOR, ID_TROTINETA, DATA_INCHIRIERE, DURATA_INCHIRIERE, COST_TOTAL ) VALUES
(6, 2, 9, TO_TIMESTAMP('2023-06-30 14:00:00', 'YYYY-MM-DD HH24:MI:SS'), 2, 15.60);
INSERT INTO LICAAMALIA_INCHIRIERI (ID_INCHIRIERE, ID_UTILIZATOR, ID_TROTINETA, DATA_INCHIRIERE, DURATA_INCHIRIERE, COST_TOTAL ) VALUES
(7, 10, 3, TO_TIMESTAMP('2023-07-05 11:45:00', 'YYYY-MM-DD HH24:MI:SS'), 3, 21.30);
INSERT INTO LICAAMALIA_INCHIRIERI (ID_INCHIRIERE, ID_UTILIZATOR, ID_TROTINETA, DATA_INCHIRIERE, DURATA_INCHIRIERE, COST_TOTAL ) VALUES
(8, 6, 7, TO_TIMESTAMP('2023-08-10 18:20:00', 'YYYY-MM-DD HH24:MI:SS'), 1, 11.90);
INSERT INTO LICAAMALIA_INCHIRIERI (ID_INCHIRIERE, ID_UTILIZATOR, ID_TROTINETA, DATA_INCHIRIERE, DURATA_INCHIRIERE, COST_TOTAL ) VALUES
(9, 8, 4, TO_TIMESTAMP('2023-09-15 09:00:00', 'YYYY-MM-DD HH24:MI:SS'), 4, 28.80);
INSERT INTO LICAAMALIA_INCHIRIERI (ID_INCHIRIERE, ID_UTILIZATOR, ID_TROTINETA, DATA_INCHIRIERE, DURATA_INCHIRIERE, COST_TOTAL ) VALUES
(10, 1, 10, TO_TIMESTAMP('2023-10-20 13:15:00', 'YYYY-MM-DD HH24:MI:SS'), 2, 14.70);

SELECT* FROM LICAAMALIA_INCHIRIERI
ORDER BY ID_INCHIRIERE ASC;

--6.Adãugarea de noi înregistrãri în tabela "ISTORIC_UTILIZARE"
INSERT INTO LICAAMALIA_ISTORIC_UTILIZARE (ID_ISTORIC, ID_UTILIZATOR, ID_TROTINETA, DATA_UTILIZARE, DURATA_UTILIZARE, DISTANTA_PARCURSA, COST_UTILIZARE) VALUES
(1, 3, 2, TO_DATE('2023-01-05', 'YYYY-MM-DD'), 2, 5.8, 8.20);
INSERT INTO LICAAMALIA_ISTORIC_UTILIZARE (ID_ISTORIC, ID_UTILIZATOR, ID_TROTINETA, DATA_UTILIZARE, DURATA_UTILIZARE, DISTANTA_PARCURSA, COST_UTILIZARE) VALUES
(2, 7, 6, TO_DATE('2023-02-10', 'YYYY-MM-DD'), 1, 3.5, 4.50);
INSERT INTO LICAAMALIA_ISTORIC_UTILIZARE (ID_ISTORIC, ID_UTILIZATOR, ID_TROTINETA, DATA_UTILIZARE, DURATA_UTILIZARE, DISTANTA_PARCURSA, COST_UTILIZARE) VALUES
(3, 4, 8, TO_DATE('2023-03-15', 'YYYY-MM-DD'), 3, 10.2, 14.70);
INSERT INTO LICAAMALIA_ISTORIC_UTILIZARE (ID_ISTORIC, ID_UTILIZATOR, ID_TROTINETA, DATA_UTILIZARE, DURATA_UTILIZARE, DISTANTA_PARCURSA, COST_UTILIZARE) VALUES
(4, 9, 1, TO_DATE('2023-04-20', 'YYYY-MM-DD'), 4, 15.0, 20.40);
INSERT INTO LICAAMALIA_ISTORIC_UTILIZARE (ID_ISTORIC, ID_UTILIZATOR, ID_TROTINETA, DATA_UTILIZARE, DURATA_UTILIZARE, DISTANTA_PARCURSA, COST_UTILIZARE) VALUES
(5, 5, 5, TO_DATE('2023-05-25', 'YYYY-MM-DD'), 1, 4.1, 6.80);
INSERT INTO LICAAMALIA_ISTORIC_UTILIZARE (ID_ISTORIC, ID_UTILIZATOR, ID_TROTINETA, DATA_UTILIZARE, DURATA_UTILIZARE, DISTANTA_PARCURSA, COST_UTILIZARE) VALUES
(6, 2, 9, TO_DATE('2023-06-30', 'YYYY-MM-DD'), 2, 7.3, 10.50);
INSERT INTO LICAAMALIA_ISTORIC_UTILIZARE (ID_ISTORIC, ID_UTILIZATOR, ID_TROTINETA, DATA_UTILIZARE, DURATA_UTILIZARE, DISTANTA_PARCURSA, COST_UTILIZARE) VALUES
(7, 10, 3, TO_DATE('2023-07-05', 'YYYY-MM-DD'), 3, 9.8, 13.20);
INSERT INTO LICAAMALIA_ISTORIC_UTILIZARE (ID_ISTORIC, ID_UTILIZATOR, ID_TROTINETA, DATA_UTILIZARE, DURATA_UTILIZARE, DISTANTA_PARCURSA, COST_UTILIZARE) VALUES
(8, 6, 7, TO_DATE('2023-08-10', 'YYYY-MM-DD'), 1, 5.5, 7.90);
INSERT INTO LICAAMALIA_ISTORIC_UTILIZARE (ID_ISTORIC, ID_UTILIZATOR, ID_TROTINETA, DATA_UTILIZARE, DURATA_UTILIZARE, DISTANTA_PARCURSA, COST_UTILIZARE) VALUES
(9, 8, 4, TO_DATE('2023-09-15', 'YYYY-MM-DD'), 4, 14.7, 19.80);
INSERT INTO LICAAMALIA_ISTORIC_UTILIZARE (ID_ISTORIC, ID_UTILIZATOR, ID_TROTINETA, DATA_UTILIZARE, DURATA_UTILIZARE, DISTANTA_PARCURSA, COST_UTILIZARE) VALUES
(10, 1, 10, TO_DATE('2023-10-20', 'YYYY-MM-DD'), 2, 6.2, 9.30);

SELECT* FROM LICAAMALIA_ISTORIC_UTILIZARE
ORDER BY ID_ISTORIC ASC;

--E. Blocuri PL/SQL continând structuri de control variate

--1. Utilizare FOR LOOP

SET SERVEROUTPUT ON;

BEGIN
    FOR v_trotineta IN 
    (SELECT ID_TROTINETA, NUME_MODEL, PRODUCATOR FROM LICAAMALIA_TROTINETE) 
    LOOP
        DBMS_OUTPUT.PUT_LINE('Trotineta ID: ' || v_trotineta.ID_TROTINETA || 
                             ', Model: ' || v_trotineta.NUME_MODEL || 
                             ', Producãtor: ' || v_trotineta.PRODUCATOR);
    END LOOP;
END;
/

--2. Utilizare WHILE LOOP
SET SERVEROUTPUT ON;

DECLARE
    v_total_distanta NUMBER := 0;
    v_index NUMBER := 1;
    v_max_id NUMBER;
    v_distanta NUMBER;
BEGIN
    SELECT MAX(ID_ISTORIC) INTO v_max_id FROM LICAAMALIA_ISTORIC_UTILIZARE;
    WHILE v_index <= v_max_id LOOP
        SELECT NVL(DISTANTA_PARCURSA, 0) INTO v_distanta
        FROM LICAAMALIA_ISTORIC_UTILIZARE
        WHERE ID_ISTORIC = v_index;

        v_total_distanta := v_total_distanta + v_distanta;
        v_index := v_index + 1;
    END LOOP;

    DBMS_OUTPUT.PUT_LINE('Total distan?ã parcursã: ' || v_total_distanta || ' km');
END;
/


--3. Utilizare cursor

SET SERVEROUTPUT ON;
DECLARE
    CURSOR c IS 
        SELECT ID_TROTINETA, NUME_MODEL, BATERIE_RAMASA 
        FROM LICAAMALIA_TROTINETE 
        ORDER BY BATERIE_RAMASA DESC;
    v_count NUMBER := 0;
    v_trotineta c%ROWTYPE;
BEGIN
    OPEN c;
    LOOP
        FETCH c INTO v_trotineta;
        EXIT WHEN c%NOTFOUND OR v_count = 5;

        DBMS_OUTPUT.PUT_LINE('Trotineta ID: ' || v_trotineta.ID_TROTINETA || 
                             ', Model: ' || v_trotineta.NUME_MODEL || 
                             ', Baterie rãmasã: ' || v_trotineta.BATERIE_RAMASA || '%');
        v_count := v_count + 1;
    END LOOP;
    CLOSE c;
END;
/


--4. Utilizare IF/ELSE
SET SERVEROUTPUT ON;

DECLARE
    v_nume_complet VARCHAR2(100);
    v_varsta NUMBER;
    v_durata_inchiriere NUMBER;
BEGIN
    SELECT u.NUME || ' ' || u.PRENUME, u.VARSTA, i.DURATA_INCHIRIERE
    INTO v_nume_complet, v_varsta, v_durata_inchiriere
    FROM LICAAMALIA_UTILIZATORI u
    JOIN LICAAMALIA_INCHIRIERI i ON u.ID_UTILIZATOR = i.ID_UTILIZATOR
    WHERE i.DURATA_INCHIRIERE > 3 AND ROWNUM = 1; -- Luãm doar primul utilizator
    DBMS_OUTPUT.PUT_LINE('Utilizator: ' || v_nume_complet || 
                         ', Duratã închiriere: ' || v_durata_inchiriere || ' ore');

    IF v_varsta < 25 THEN
        DBMS_OUTPUT.PUT_LINE(' - Categoria: Tânãr');
    ELSIF v_varsta BETWEEN 25 AND 35 THEN
        DBMS_OUTPUT.PUT_LINE(' - Categoria: Adult');
    ELSE
        DBMS_OUTPUT.PUT_LINE(' - Categoria: Senior');
    END IF;
END;
/

--5. Utilizare FOR LOOP 
SET SERVEROUTPUT ON;
DECLARE
    CURSOR c IS
        SELECT u.ID_UTILIZATOR, u.NUME || ' ' || u.PRENUME AS NUME_COMPLET, SUM(i.COST_TOTAL) AS TOTAL_COST
        FROM LICAAMALIA_UTILIZATORI u
        JOIN LICAAMALIA_INCHIRIERI i ON u.ID_UTILIZATOR = i.ID_UTILIZATOR
        GROUP BY u.ID_UTILIZATOR, u.NUME, u.PRENUME;

BEGIN
    FOR v_utilizator IN c LOOP
        DBMS_OUTPUT.PUT_LINE('Utilizator: ' || v_utilizator.NUME_COMPLET || 
                             ', Cost total închirieri: ' || v_utilizator.TOTAL_COST);

        IF v_utilizator.TOTAL_COST > 50 THEN
            DBMS_OUTPUT.PUT_LINE(' - Categoria: Client VIP');
        ELSE
            DBMS_OUTPUT.PUT_LINE(' - Categoria: Client obisnuit');
        END IF;
    END LOOP;
END;
/


--Utilizarea cursorilor ?i a excepþiilor în cadrul blocurilor PL/SQL
--CURSORI
--1.	Cursor explicit OPEN-LOOP-FETCH-CLOSE 
SET SERVEROUTPUT ON;
DECLARE
    CURSOR c IS 
        SELECT NUME || ' ' || PRENUME AS NUME_COMPLET, VARSTA, ADRESA 
        FROM LICAAMALIA_UTILIZATORI;
    v c%ROWTYPE;
BEGIN
    OPEN c;
    LOOP
        FETCH c INTO v;
        EXIT WHEN c%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE('Nume complet: ' || v.NUME_COMPLET || ', Vârsta: ' || v.VARSTA || ', Adresa: ' || v.ADRESA);
    END LOOP;
    CLOSE c;
END;
/

--2.	Cursor explicit FOR-LOOP 
SET SERVEROUTPUT ON;

DECLARE
    CURSOR c IS 
        SELECT ID_TROTINETA, COUNT(*) AS NUMAR_INCHIRIERI
        FROM LICAAMALIA_INCHIRIERI
        GROUP BY ID_TROTINETA;

BEGIN
    FOR v IN c LOOP
        DBMS_OUTPUT.PUT_LINE('ID Trotineta: ' || v.ID_TROTINETA || ' - Numãr Închirieri: ' || v.NUMAR_INCHIRIERI);
    END LOOP;
END;
/

--3.	Cursor explicit FOR-LOOP
SET SERVEROUTPUT ON;

DECLARE
    CURSOR c IS 
        SELECT ID_TROTINETA, SUM(COST_UTILIZARE) AS COST_TOTAL
        FROM LICAAMALIA_ISTORIC_UTILIZARE
        GROUP BY ID_TROTINETA
        ORDER BY COST_TOTAL DESC
        FETCH FIRST 3 ROWS ONLY;

BEGIN
    FOR v IN c LOOP
        DBMS_OUTPUT.PUT_LINE('ID Trotineta: ' || v.ID_TROTINETA || ' - Cost Total: ' || v.COST_TOTAL);
    END LOOP;
END;
/

--4.	Cursor explicit OPEN-FETCH-CLOSE 
SET SERVEROUTPUT ON;

DECLARE
    CURSOR c IS 
        SELECT ID_TROTINETA 
        FROM LICAAMALIA_INTRETINERE_TROTINETE
        ORDER BY COST_INTRETINERE ASC
        FETCH FIRST 1 ROW ONLY;
    v_trotineta_id LICAAMALIA_INTRETINERE_TROTINETE.ID_TROTINETA%TYPE;
BEGIN
    OPEN c;
    FETCH c INTO v_trotineta_id;
    CLOSE c;

    UPDATE LICAAMALIA_TROTINETE
    SET STARE = 'BUNA'
    WHERE ID_TROTINETA = v_trotineta_id;

    DBMS_OUTPUT.PUT_LINE('Trotineta cu ID ' || v_trotineta_id || ' a fost actualizatã la stare BUNÃ.');
END;
/

--5.	Cursor implicit 
SET SERVEROUTPUT ON;

BEGIN
    -- Actualizãm starea trotinetelor cu bateria sub 50%
    UPDATE LICAAMALIA_TROTINETE
    SET STARE = 'NECESITÃ ÎNCÃRCARE'
    WHERE BATERIE_RAMASA < 50;

    -- Utilizãm cursorul implicit pentru a afi?a numãrul de rânduri afectate
    IF SQL%FOUND THEN
        DBMS_OUTPUT.PUT_LINE('S-au actualizat ' || SQL%ROWCOUNT || ' trotinete cu bateria sub 50%.');
    ELSE
        DBMS_OUTPUT.PUT_LINE('Nu existã trotinete cu bateria sub 50%.');
    END IF;
END;
/

--EXCEPTII
--1.	Excep?ie implicitã (NO_DATA_FOUND) 
SET SERVEROUTPUT ON;

DECLARE
    v_nume_utilizator LICAAMALIA_UTILIZATORI.NUME%TYPE;
BEGIN
    SELECT NUME INTO v_nume_utilizator
    FROM LICAAMALIA_UTILIZATORI
    WHERE ADRESA = 'Str. Inexistenta';

    DBMS_OUTPUT.PUT_LINE('Utilizator gãsit: ' || v_nume_utilizator);

EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('Nu existã niciun utilizator la aceastã adresã.');
END;
/

--2.	Excep?ie explicitã (RAISE) 
SET SERVEROUTPUT ON;

DECLARE
    baterie_slabã EXCEPTION;
    v_count NUMBER;
BEGIN
    SELECT COUNT(*) INTO v_count
    FROM LICAAMALIA_TROTINETE
    WHERE BATERIE_RAMASA < 65;

    IF v_count = 0 THEN
        RAISE baterie_slabã;
    ELSE
        DBMS_OUTPUT.PUT_LINE('Existã ' || v_count || ' trotinete cu baterie slabã.');
    END IF;

EXCEPTION
    WHEN baterie_slabã THEN
        DBMS_OUTPUT.PUT_LINE('Nu existã trotinete cu baterie mai micã de 65%.');
END;
/



--3.	Excep?ie generalã (WHEN OTHERS) 
SET SERVEROUTPUT ON;

BEGIN
    UPDATE LICAAMALIA_TROTINETE
    SET PRET_MINUT = PRET_MINUT + 0.1
    WHERE PRODUCATOR = 'XIAOMI';

    DBMS_OUTPUT.PUT_LINE('Pretul pe minut a fost actualizat pentru trotinetele Xiaomi.');

EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('A aparut o eroare nea?teptatã: ' || SQLERRM);
END;
/


--4.	Excep?ie predefinitã (TOO_MANY_ROWS)
SET SERVEROUTPUT ON;

DECLARE
    v_trotineta_id LICAAMALIA_TROTINETE.ID_TROTINETA%TYPE;
BEGIN
    SELECT ID_TROTINETA INTO v_trotineta_id
    FROM LICAAMALIA_TROTINETE
    WHERE PRODUCATOR = 'XIAOMI'; 

    DBMS_OUTPUT.PUT_LINE('Trotineta gãsitã: ' || v_trotineta_id);

EXCEPTION
    WHEN TOO_MANY_ROWS THEN
        DBMS_OUTPUT.PUT_LINE('Existã mai multe trotinete pentru acest producãtor.');
END;
/


--PROCEDURI
--1. Calculare cost total între?inere
CREATE OR REPLACE PROCEDURE Calculare_Cost_Total_Intretinere IS
    v_total_cost NUMBER := 0;
BEGIN
    SELECT SUM(COST_INTRETINERE) INTO v_total_cost
    FROM LICAAMALIA_INTRETINERE_TROTINETE;

    DBMS_OUTPUT.PUT_LINE('Costul total al întretinerii este: ' || v_total_cost || ' lei.');
END;
/
EXECUTE Calculare_Cost_Total_Intretinere;


--2. Gãsire trotinetã cu baterie minimã
CREATE OR REPLACE PROCEDURE Gaseste_Trotineta_Minima_Baterie IS
    v_id_trotineta NUMBER;
    v_baterie_min NUMBER;
BEGIN
    SELECT ID_TROTINETA, BATERIE_RAMASA
    INTO v_id_trotineta, v_baterie_min
    FROM LICAAMALIA_TROTINETE
    WHERE BATERIE_RAMASA = (SELECT MIN(BATERIE_RAMASA) FROM LICAAMALIA_TROTINETE);

    DBMS_OUTPUT.PUT_LINE('Trotineta cu bateria minimã este ID: ' || v_id_trotineta || 
                         ', Baterie rãmasã: ' || v_baterie_min || '%');
END;
/
EXECUTE Gaseste_Trotineta_Minima_Baterie;


--3. Afi?are utilizatori ?i vârste
CREATE OR REPLACE PROCEDURE Afisare_Utilizatori IS
    CURSOR c_utilizatori IS
        SELECT NUME || ' ' || PRENUME AS NUME_COMPLET, VARSTA
        FROM LICAAMALIA_UTILIZATORI;
    v_utilizator c_utilizatori%ROWTYPE;
BEGIN
    OPEN c_utilizatori;
    LOOP
        FETCH c_utilizatori INTO v_utilizator;
        EXIT WHEN c_utilizatori%NOTFOUND;

        DBMS_OUTPUT.PUT_LINE('Utilizator: ' || v_utilizator.NUME_COMPLET || 
                             ', Vârstã: ' || v_utilizator.VARSTA);
    END LOOP;
    CLOSE c_utilizatori;
END;
/
EXECUTE Afisare_Utilizatori;


--4. Calculare distan?ã totalã parcursã de trotinete
CREATE OR REPLACE PROCEDURE Calculare_Distanta_Totala IS
    v_distanta_totala NUMBER := 0;
BEGIN
    SELECT SUM(KILOMETRI_PARCURSI) INTO v_distanta_totala
    FROM LICAAMALIA_RAPORT_TROTINETE;
    DBMS_OUTPUT.PUT_LINE('Distanta totalã parcursã de toate trotinetele este: ' || v_distanta_totala || ' km');
END;
/
BEGIN
    Calculare_Distanta_Totala;
END;
/


--5. Afi?are închirieri peste o anumitã duratã
CREATE OR REPLACE PROCEDURE Afisare_Inchirieri (
    p_durata_minima IN NUMBER
) IS
    CURSOR c_inchirieri IS
        SELECT ID_INCHIRIERE, ID_UTILIZATOR, DURATA_INCHIRIERE, COST_TOTAL
        FROM LICAAMALIA_INCHIRIERI
        WHERE DURATA_INCHIRIERE > p_durata_minima;
    v_inchiriere c_inchirieri%ROWTYPE;
BEGIN
    OPEN c_inchirieri;
    LOOP
        FETCH c_inchirieri INTO v_inchiriere;
        EXIT WHEN c_inchirieri%NOTFOUND;

        DBMS_OUTPUT.PUT_LINE('ID Închiriere: ' || v_inchiriere.ID_INCHIRIERE || 
                             ', ID Utilizator: ' || v_inchiriere.ID_UTILIZATOR || 
                             ', Duratã: ' || v_inchiriere.DURATA_INCHIRIERE || ' ore' || 
                             ', Cost: ' || v_inchiriere.COST_TOTAL || ' lei');
    END LOOP;
    CLOSE c_inchirieri;
END;
/
EXEC Afisare_Inchirieri(2);


--FUNCTII
--1.Calculare cost total între?inere pentru o trotinetã
CREATE OR REPLACE FUNCTION Cost_Intretinere_Trotineta (
    p_id_trotineta IN NUMBER
) RETURN NUMBER IS
    v_cost_total NUMBER;
BEGIN
    SELECT NVL(SUM(COST_INTRETINERE), 0)
    INTO v_cost_total
    FROM LICAAMALIA_INTRETINERE_TROTINETE
    WHERE ID_TROTINETA = p_id_trotineta;

    RETURN v_cost_total;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        RETURN 0; -- Dacã trotineta nu are înregistrãri de între?inere
END;
/
SET SERVEROUTPUT ON;

DECLARE
    v_cost_total NUMBER;
BEGIN
    v_cost_total := Cost_Intretinere_Trotineta(1);
    DBMS_OUTPUT.PUT_LINE('Cost total întretinere pentru trotineta 1: ' || v_cost_total);
END;
/

--2. Calculare distan?a totalã parcursã de o trotinetã
CREATE OR REPLACE FUNCTION Distanta_Totala_Trotineta (
    p_id_trotineta IN NUMBER
) RETURN NUMBER IS
    v_distanta_totala NUMBER;
BEGIN
    SELECT NVL(SUM(KILOMETRI_PARCURSI), 0)
    INTO v_distanta_totala
    FROM LICAAMALIA_RAPORT_TROTINETE
    WHERE ID_TROTINETA = p_id_trotineta;

    RETURN v_distanta_totala;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        RETURN 0; -- Dacã trotineta nu are înregistrãri în raport
END;
/

SET SERVEROUTPUT ON;

DECLARE
    v_distanta_totala NUMBER;
BEGIN
    v_distanta_totala := Distanta_Totala_Trotineta(3);
    DBMS_OUTPUT.PUT_LINE('Distanta totalã parcursã de trotineta 3: ' || v_distanta_totala || ' km');
END;
/

--3. Calculare cost total închirieri pentru un utilizator
CREATE OR REPLACE FUNCTION Cost_Total_Inchirieri (
    p_id_utilizator IN NUMBER
) RETURN NUMBER IS
    v_cost_total NUMBER;
BEGIN
    -- Calcularea costului total al închirierilor pentru utilizatorul dat
    SELECT NVL(SUM(COST_TOTAL), 0)
    INTO v_cost_total
    FROM LICAAMALIA_INCHIRIERI
    WHERE ID_UTILIZATOR = p_id_utilizator;

    RETURN v_cost_total;

EXCEPTION
    WHEN NO_DATA_FOUND THEN
        RETURN 0; -- Dacã utilizatorul nu are închirieri, returnãm 0
END;
/
SET SERVEROUTPUT ON;

DECLARE
    v_cost_total NUMBER;
BEGIN
    v_cost_total := Cost_Total_Inchirieri(7);
    DBMS_OUTPUT.PUT_LINE('Cost total al închirierilor pentru utilizatorul cu ID 7: ' || v_cost_total || ' lei');
END;
/

--4. Calculare vârstã utilizator
CREATE OR REPLACE FUNCTION Varsta_Utilizator (
    p_id_utilizator IN NUMBER
) RETURN NUMBER IS
    v_varsta NUMBER;
BEGIN
    SELECT VARSTA
    INTO v_varsta
    FROM LICAAMALIA_UTILIZATORI
    WHERE ID_UTILIZATOR = p_id_utilizator;

    RETURN v_varsta;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        RETURN NULL; -- Dacã utilizatorul nu existã
END;
/

SET SERVEROUTPUT ON;

DECLARE
    v_varsta NUMBER;
BEGIN
    v_varsta := Varsta_Utilizator(5);
    IF v_varsta IS NOT NULL THEN
        DBMS_OUTPUT.PUT_LINE('Vârsta utilizatorului cu ID 5: ' || v_varsta || ' ani');
    ELSE
        DBMS_OUTPUT.PUT_LINE('Nu existã utilizator cu ID-ul 5.');
    END IF;
END;
/

